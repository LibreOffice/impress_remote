apply plugin: 'com.android.application'
apply plugin: 'findbugs'

android {
    defaultConfig {
        minSdkVersion 9
    }

    lintOptions {
        abortOnError false
    }
    productFlavors {
        // return statements to avoid "Not all execution paths return a value" inspection warning
        // the full remote including the wearable
        full {return true}
        // minimal variant without wearable (and thus without the need for google apis)
        minimal {return true}
    }
}

dependencies {
    // both pull in support-v4 and appcompat-v7 already
    compile 'com.android.support:preference-v7:25.0.0'
    compile 'com.android.support:design:25.0.0'
    fullCompile 'com.google.android.gms:play-services-wearable:9.6.1'
    fullWearApp project(':wear')

    compile ("com.google.code.findbugs:annotations:3.0.1") {
        // We really only need the SuppressFBWarnings annotation, everything else can be ignored.
        // Without this we get weird failures due to dependencies.
        transitive = false
    }
}

// -------------------------------------------------------------------------------------------------
// Static Analysis: findbugs
// -------------------------------------------------------------------------------------------------

findbugs {
    ignoreFailures = false

    effort = "max"

    // This selects what level of bugs to report: low means low priority issues will be reported
    // (in addition to medium+high), which corresponds to warning about everything.
    // TODO: boost this to low once low priority issues are fixed.
    // (Whether or not low is useful is tbc.)
    reportLevel = "medium"

    excludeFilter = new File("${project.rootDir}/quality/findbugs-exclude.xml")
}

task findbugs(type: FindBugs, dependsOn: "assemble", group: 'verification') {
    classes = files("$projectDir.absolutePath/build/intermediates/classes")

    source = fileTree('src/main/java')
    classpath = files()

    // Only one report format is supported. Html is easier to read, so let's use that
    // (xml is the one that's enabled by default).
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

afterEvaluate {
    check.dependsOn 'findbugs'
}
